{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/svelte/src/runtime/internal/each.js","../../node_modules/svelte/src/runtime/internal/Component.js","../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../node_modules/svelte/src/shared/version.js","../../node_modules/generator-sort/build/index.js","../../node_modules/svelte-virtual-table/src/VirtualTable.svelte","../../src/App.svelte","../../node_modules/svelte/src/runtime/internal/await_block.js","../../src/main.js"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.2';\nexport const PUBLIC_VERSION = '4';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction compareStrings(sA, sB) {\n    return sA > sB ? 1 : sA < sB ? -1 : 0;\n}\nexports.compareStrings = compareStrings;\nfunction compareNumbers(sA, sB) {\n    return sA - sB;\n}\nexports.compareNumbers = compareNumbers;\nfunction reverse(r) {\n    return -r;\n}\nexports.reverse = reverse;\nfunction compareStringsCaseInsensitive(sA, sB) {\n    return sA.localeCompare(sB, undefined, {\n        sensitivity: 'base',\n    });\n}\nexports.compareStringsCaseInsensitive = compareStringsCaseInsensitive;\nfunction sortFunction(gen) {\n    return (a, b) => {\n        for (let comp of gen(a, b)) {\n            if (comp) {\n                return comp;\n            }\n        }\n        return 0;\n    };\n}\nexports.sortFunction = sortFunction;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUdBLFNBQWdCLGNBQWMsQ0FBQyxFQUFVLEVBQUUsRUFBVTtJQUNqRCxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtBQUN6QyxDQUFDO0FBRkQsd0NBRUM7QUFFRCxTQUFnQixjQUFjLENBQUMsRUFBVSxFQUFFLEVBQVU7SUFDakQsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFBO0FBQ2xCLENBQUM7QUFGRCx3Q0FFQztBQUVELFNBQWdCLE9BQU8sQ0FBQyxDQUFnQjtJQUNwQyxPQUFPLENBQUMsQ0FBQyxDQUFBO0FBQ2IsQ0FBQztBQUZELDBCQUVDO0FBRUQsU0FBZ0IsNkJBQTZCLENBQUMsRUFBVSxFQUFFLEVBQVU7SUFDaEUsT0FBTyxFQUFFLENBQUMsYUFBYSxDQUFDLEVBQUUsRUFBRSxTQUFTLEVBQUU7UUFDbkMsV0FBVyxFQUFFLE1BQU07S0FDdEIsQ0FBa0IsQ0FBQTtBQUN2QixDQUFDO0FBSkQsc0VBSUM7QUFFRCxTQUFnQixZQUFZLENBQ3hCLEdBQW9EO0lBRXBELE9BQU8sQ0FBQyxDQUFJLEVBQUUsQ0FBSSxFQUFFLEVBQUU7UUFDbEIsS0FBSyxJQUFJLElBQUksSUFBSSxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFO1lBQ3hCLElBQUksSUFBSSxFQUFFO2dCQUNOLE9BQU8sSUFBSSxDQUFBO2FBQ2Q7U0FDSjtRQUVELE9BQU8sQ0FBQyxDQUFBO0lBQ1osQ0FBQyxDQUFBO0FBQ0wsQ0FBQztBQVpELG9DQVlDIn0=","<script>\n    const CLASSNAME_TABLE = 'tablesort' // keep same for compatibility with https://github.com/mattiash/svelte-tablesort\n    const CLASSNAME_SORTABLE = 'sortable'\n    const CLASSNAME_ASC = 'ascending'\n    const CLASSNAME_DESC = 'descending'\n\n    import {\n        compareNumbers,\n        compareStrings,\n        sortFunction,\n    } from 'generator-sort'\n    import { onMount, tick } from 'svelte'\n\n    // props\n    export let items\n    export let requireBorderCollapse = false\n    let className = ''\n    export { className as class }\n\n    // MARK: virtual stuff\n    export let height = '100%' // the height of the viewport/table\n    export let itemHeight = undefined // the height of each row\n\n    // read-only, but visible to consumers via bind:start resp. bind:end\n    export let start = 0 // the index of the first visible item\n    export let end = 0 // the index of the last visible item\n\n    // local state\n    let averageHeight\n    let bottom = 0\n    let contents\n    let headHeight = 0\n    let footHeight = 0\n    let heightMap = []\n    let mounted\n    let rows\n    let thead\n    let top = 0\n    let viewport\n    let viewportHeight = 0\n    let visible\n\n    // whenever `items` changes, invalidate the current heightmap\n    $: if (mounted) refreshHeightMap(sortedItems, viewportHeight, itemHeight)\n\n    async function refreshHeightMap(items, viewportHeight, itemHeight) {\n        const { scrollTop } = viewport\n        await tick() // wait until the DOM is up to date\n        let contentHeight = top - (scrollTop - headHeight)\n        let i = start\n        while (\n            contentHeight < viewportHeight - headHeight &&\n            i < items.length\n        ) {\n            let row = rows[i - start]\n            if (!row) {\n                end = i + 1\n                await tick() // render the newly visible row\n                row = rows[i - start]\n            }\n            const row_height = (heightMap[i] = itemHeight || row.getBoundingClientRect().height)\n            contentHeight += row_height\n            i += 1\n        }\n        end = i\n        const remaining = items.length - end\n        averageHeight = (top + contentHeight) / end\n        bottom = remaining * averageHeight + footHeight\n        heightMap.length = items.length\n        await scrollToIndex(0, { behavior: 'auto' })\n    }\n\n    function getComputedPxAmount(elem, pseudoElem, property) {\n        const compStyle = getComputedStyle(elem, pseudoElem)\n        return parseInt(compStyle[property])\n    }\n\n    async function handleScroll() {\n        rows = contents.children\n        const isStartOverflow = sortedItems.length < start\n        const rowBottomBorder = getComputedPxAmount(\n            rows[1],\n            null,\n            'border-bottom-width'\n        )\n        const rowTopBorder = getComputedPxAmount(\n            rows[1],\n            null,\n            'border-top-width'\n        )\n        const headBorderTop = getComputedPxAmount(\n            thead,\n            null,\n            'border-top-width'\n        )\n        const headBorderBottom = getComputedPxAmount(\n            thead,\n            null,\n            'border-bottom-width'\n        )\n        const actualBorderCollapsedWidth = requireBorderCollapse ? Math.max(\n            rowBottomBorder,\n            rowTopBorder\n        ) : 0;\n\n        if (isStartOverflow) {\n            await scrollToIndex(sortedItems.length - 1, { behavior: 'auto' })\n        }\n\n        const { scrollTop } = viewport\n        let new_start = 0\n        // acquire height map for currently visible rows\n        for (let v = 0; v < rows.length; v += 1) {\n            heightMap[start + v] = itemHeight || rows[v].getBoundingClientRect().height\n        }\n        let i = 0\n        // start from top: thead, with its borders, plus the first border to afterwards neglect\n        let y = headHeight + rowTopBorder / 2\n        let row_heights = []\n        // loop items to find new start\n        while (i < sortedItems.length) {\n            const row_height = heightMap[i] || averageHeight\n            row_heights[i] = row_height\n            // we only want to jump if the full (incl. border) row is away\n            if (y + row_height + actualBorderCollapsedWidth > scrollTop) {\n                // this is the last index still inside the viewport\n                new_start = i\n                top =\n                    y -\n                    (requireBorderCollapse\n                        ? ((headBorderBottom + headBorderTop)/2)\n                        : (headHeight + rowTopBorder/2)) //+ rowBottomBorder - rowTopBorder\n                break\n            }\n            y += row_height\n            i += 1\n        }\n\n        // console.log(\n        //     'a',\n        //     i,\n        //     y,\n        //     top,\n        //     bottom,\n        //     scrollTop,\n        //     headHeight,\n        //     averageHeight,\n        //     actualBorderCollapsedWidth,\n        //     row_heights,\n        //     heightMap\n        // )\n        new_start = Math.max(0, new_start)\n        // loop items to find end\n        while (i < sortedItems.length) {\n            const row_height = heightMap[i] || averageHeight\n            y += row_height\n            i += 1\n            if (y > scrollTop + viewportHeight) {\n                break\n            }\n        }\n        start = new_start\n        end = i\n        const remaining = sortedItems.length - end\n        if (end === 0) {\n            end = 10\n        }\n        averageHeight = y / end\n        let remaining_height = remaining * averageHeight // 0\n        // compute height map for remaining items\n        while (i < sortedItems.length) {\n            i += 1\n            heightMap[i] = averageHeight\n            // remaining_height += heightMap[i] / remaining\n        }\n        // find the\n        bottom = remaining_height\n        if (!isFinite(bottom)) {\n            bottom = 200000\n        }\n    }\n\n    export async function scrollToIndex(index, opts) {\n        const { scrollTop } = viewport\n        const itemsDelta = index - start\n        const _itemHeight = itemHeight || averageHeight\n        const distance = itemsDelta * _itemHeight\n        opts = {\n            left: 0,\n            top: scrollTop + distance,\n            behavior: 'smooth',\n            ...opts,\n        }\n        viewport.scrollTo(opts)\n    }\n\n    // MARK: table sort stuff\n    let sortOrder = [[]]\n\n    $: sortedItems = sorted([...items], sortOrder)\n\n    $: visible = sortedItems\n        .slice(start, end)\n        .map((data, i) => {\n            return { index: i + start, data }\n        })\n\n    const sorted = function (arr, sortOrder) {\n        arr.sort(\n            sortFunction(function* (a, b) {\n                for (let [fieldName, r] of sortOrder) {\n                    const reverse = r === 0 ? 1 : -1\n                    if (typeof a[fieldName] === 'number') {\n                        yield reverse *\n                            compareNumbers(a[fieldName], b[fieldName])\n                    } else {\n                        yield reverse *\n                            compareStrings(a[fieldName], b[fieldName])\n                    }\n                }\n            })\n        )\n\n        return arr\n    }\n\n    function updateSortOrder(th, push) {\n        const fieldName = th.dataset.sort\n        if (push) {\n            if (sortOrder[sortOrder.length - 1][0] === fieldName) {\n                sortOrder[sortOrder.length - 1] = [\n                    fieldName,\n                    (sortOrder[sortOrder.length - 1][1] + 1) % 2,\n                ]\n            } else {\n                sortOrder = [...sortOrder, [fieldName, 0]]\n            }\n        } else {\n            if (sortOrder.length === 1 && sortOrder[0][0] === fieldName) {\n                sortOrder[0] = [fieldName, (sortOrder[0][1] + 1) % 2]\n            } else {\n                resetClasses()\n                sortOrder = [[fieldName, 0]]\n            }\n        }\n        th.className =\n            CLASSNAME_SORTABLE +\n            ' ' +\n            (sortOrder[sortOrder.length - 1][1]\n                ? CLASSNAME_DESC\n                : CLASSNAME_ASC)\n    }\n\n    function resetClasses() {\n        const th = thead.getElementsByTagName('th')\n        for (let i = 0; i < th.length; i++) {\n            if (th[i].dataset.sort) {\n                th[i].className = CLASSNAME_SORTABLE\n            }\n        }\n    }\n\n    // MARK: initial triggers\n    onMount(() => {\n        // triggger initial refresh for virtual\n        rows = contents.children\n        mounted = true\n        refreshHeightMap(items, viewportHeight, itemHeight)\n\n        // prepare sorting\n        const th = thead.getElementsByTagName('th')\n        for (let i = 0; i < th.length; i++) {\n            if (th[i].dataset.sort) {\n                th[i].className = CLASSNAME_SORTABLE\n                th[i].onclick = (event) =>\n                    updateSortOrder(th[i], event.shiftKey)\n            }\n            if (th[i].dataset.sortInitial === 'descending') {\n                th[i].className = CLASSNAME_SORTABLE + ' ' + CLASSNAME_DESC\n                sortOrder = [...sortOrder, [th[i].dataset.sort, 1]]\n            } else if (th[i].dataset.sortInitial != undefined) {\n                th[i].className = CLASSNAME_SORTABLE + ' ' + CLASSNAME_ASC\n                sortOrder = [...sortOrder, [th[i].dataset.sort, 0]]\n            }\n        }\n    })\n</script>\n\n<svelte-virtual-table-viewport>\n    <table\n        class:require-border-collapse={requireBorderCollapse}\n        class=\"{CLASSNAME_TABLE}\n        {className} table\"\n        bind:this={viewport}\n        bind:offsetHeight={viewportHeight}\n        on:scroll={handleScroll}\n        role=\"table\"\n        style=\"height: {height}; --bw-svt-p-top: {top}px; --bw-svt-p-bottom: {bottom}px; --bw-svt-head-height: {headHeight}px; --bw-svt-foot-height: {footHeight}px; --bw-svt-avg-row-height: {averageHeight}px\"\n    >\n        <thead\n            class=\"thead\"\n            role=\"rowgroup\"\n            bind:this={thead}\n            bind:offsetHeight={headHeight}\n        >\n            <slot name=\"thead\" />\n        </thead>\n        <tbody bind:this={contents} class=\"tbody\" role=\"rowgroup\">\n            {#each visible as item}\n                <slot name=\"tbody\" item={item.data} index={item.index}>\n                    Missing Table Row\n                </slot>\n            {/each}\n        </tbody>\n        <tfoot class=\"tfoot\" bind:offsetHeight={footHeight} role=\"rowgroup\">\n            <slot name=\"tfoot\" />\n        </tfoot>\n    </table>\n</svelte-virtual-table-viewport>\n\n<style type=\"text/css\">\n    table {\n        position: relative;\n        overflow-y: auto;\n        -webkit-overflow-scrolling: touch;\n        max-height: 100vh;\n        box-sizing: border-box;\n        display: block;\n        /* table-layout: fixed; */\n    }\n    table :is(thead, tfoot, tbody) {\n        display: table;\n        table-layout: fixed;\n        width: 100%;\n        box-sizing: border-box;\n    }\n    table.require-border-collapse thead {\n        min-height: calc(var(--bw-svt-p-top));\n    }\n    table.require-border-collapse tfoot {\n        min-height: calc(var(--bw-svt-p-bottom));\n    }\n    table.require-border-collapse {\n        border-collapse: collapse;\n    }\n    table:not(.require-border-collapse) tbody {\n        padding-top: var(--bw-svt-p-top);\n        padding-bottom: var(--bw-svt-p-bottom);\n    }\n    tbody {\n        position: relative;\n        box-sizing: border-box;\n        border: 0px solid currentColor;\n    }\n\n    /** sortable styles */\n    thead :global(th.sortable) {\n        cursor: pointer;\n        user-select: none;\n        -moz-user-select: none;\n        -webkit-user-select: none;\n        -ms-user-select: none;\n    }\n</style>\n","<script>\n    // import VirtualTable from '../../src/index'\n    import VirtualTable from 'svelte-virtual-table'\n\n    let items = []\n    async function getData() {\n        let dataItems = []\n        for (let page = 1; page < 5; page++) {\n            let res = await fetch(\n                `https://node-hnapi.herokuapp.com/news?page=${page}`\n            )\n            let data = await res.json()\n            dataItems = dataItems.concat(data)\n        }\n        items = dataItems\n        return items\n    }\n\n    const dataPromise = getData()\n\n    let searchTerm = ''\n\n    $: filteredList = items.filter(\n        (item) =>\n            item.title.toUpperCase().indexOf(searchTerm.toUpperCase()) !== -1\n    )\n\n    let start, start2\n    let end, end2\n</script>\n\n<h1>Virtual Table Test</h1>\n\n<p>\n    This is an example-project for the Svelte Virtual (Sortable) Table\n    component. Checkout the source on <a\n        href=\"https://github.com/BernhardWebstudio/svelte-virtual-table\"\n        >GitHub</a\n    >. The table's example content is loaded from HackerNews — all rights\n    reserved. The author has no association with Svelte or Hacker News and is\n    not liable and/or otherwise responsible for any of the contents in these tables.\n</p>\n\nFilter:\n<input bind:value={searchTerm} />\n\n{#await dataPromise}\n    Loading...\n{:then}\n    <p>Without border-collapse:</p>\n    <p>Start: {start}, end: {end}</p>\n    <VirtualTable items={filteredList} class=\"test1 test2\" bind:start bind:end>\n        <tr slot=\"thead\" role=\"row\">\n            <th data-sort=\"title\">Title</th>\n            <th data-sort=\"user\">User</th>\n            <th data-sort=\"domain\">Domain</th>\n            <th data-sort=\"time\" data-sort-initial=\"descending\">Time ago</th>\n            <th data-sort=\"comments_count\">Comments</th>\n        </tr>\n        <tr slot=\"tbody\" let:item class=\"tr\" role=\"row\">\n            <td class=\"td\"\n                ><a href={item.url} target=\"_blank\">{item.title}</a></td\n            >\n            <td class=\"td\">{item.user}</td>\n            <td class=\"td\">{item.domain}</td>\n            <td class=\"td\">{item.time_ago}</td>\n            <td class=\"td\">{item.comments_count}</td>\n        </tr>\n    </VirtualTable>\n\n    <p>With border-collapse:</p>\n    <p>Start: {start2}, end: {end2}</p>\n    <VirtualTable\n        items={filteredList}\n        class=\"test1 test2\"\n        requireBorderCollapse=\"true\"\n        bind:start={start2}\n        bind:end={end2}\n    >\n        <tr slot=\"thead\" role=\"row\">\n            <th data-sort=\"title\">Title</th>\n            <th data-sort=\"user\">User</th>\n            <th data-sort=\"domain\">Domain</th>\n            <th data-sort=\"time\" data-sort-initial=\"descending\">Time ago</th>\n            <th data-sort=\"comments_count\">Comments</th>\n        </tr>\n        <tr slot=\"tbody\" let:item class=\"tr\" role=\"row\">\n            <td class=\"td\"\n                ><a href={item.url} target=\"_blank\">{item.title}</a></td\n            >\n            <td class=\"td\">{item.user}</td>\n            <td class=\"td\">{item.domain}</td>\n            <td class=\"td\">{item.time_ago}</td>\n            <td class=\"td\">{item.comments_count}</td>\n        </tr>\n    </VirtualTable>\n{:catch error}\n    <p style=\"color: red\">{error.message}</p>\n{/await}\n\n<p>\n    Thanks for checking out this Demo. Refer to the <a\n        href=\"https://github.com/BernhardWebstudio/svelte-virtual-table#readme\"\n        >README</a\n    >\n    of the original project on how to use this component and the\n    <a href=\"https://github.com/BernhardWebstudio/svelte-virtual-table/issues\"\n        >GitHub-project</a\n    > in general for known issues.\n</p>\n\n<style>\n    :global(body) {\n        background-color: white;\n    }\n\n    :global(.test1) {\n        width: 100%;\n        border: 1px solid black;\n    }\n\n    :global(.test1 thead) {\n        text-align: left;\n        border-bottom: 10px solid black;\n    }\n\n    /**\n    * This border is only visible when \n    */\n    :global(.test1 tr) {\n        border-bottom: 10px solid grey;\n        border-top: 10px solid grey;\n    }\n\n    :global(.test1 td:not(:last-of-type)) {\n        border-right: 1px solid grey;\n    }\n    :global(.test1 th:not(:last-of-type)) {\n        border-right: 1px solid grey;\n    }\n\n    /**\n    * Specify fixed widths\n    */\n    .td:first-of-type,\n    td:first-of-type,\n    :global(.test1 th:first-of-type) {\n        width: 45vw;\n    }\n\n    td,\n    .td,\n    :global(.test1 th) {\n        width: calc((45vw - 10px) / 4);\n        word-wrap: break-word;\n    }\n\n    :global(.test1 th:last-of-type),\n    .td:last-of-type,\n    td:last-of-type {\n        text-align: right;\n    }\n</style>\n","import { is_promise } from './utils.js';\nimport { check_outros, group_outros, transition_in, transition_out } from './transitions.js';\nimport { flush } from './scheduler.js';\nimport { get_current_component, set_current_component } from './lifecycle.js';\n\n/**\n * @template T\n * @param {Promise<T>} promise\n * @param {import('./private.js').PromiseInfo<T>} info\n * @returns {boolean}\n */\nexport function handle_promise(promise, info) {\n\tconst token = (info.token = {});\n\t/**\n\t * @param {import('./private.js').FragmentFactory} type\n\t * @param {0 | 1 | 2} index\n\t * @param {number} [key]\n\t * @param {any} [value]\n\t * @returns {void}\n\t */\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\t\tinfo.resolved = value;\n\t\tlet child_ctx = info.ctx;\n\t\tif (key !== undefined) {\n\t\t\tchild_ctx = child_ctx.slice();\n\t\t\tchild_ctx[key] = value;\n\t\t}\n\t\tconst block = type && (info.current = type)(child_ctx);\n\t\tlet needs_flush = false;\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroup_outros();\n\t\t\t\t\t\ttransition_out(block, 1, 1, () => {\n\t\t\t\t\t\t\tif (info.blocks[i] === block) {\n\t\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcheck_outros();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\t\t\tblock.c();\n\t\t\ttransition_in(block, 1);\n\t\t\tblock.m(info.mount(), info.anchor);\n\t\t\tneeds_flush = true;\n\t\t}\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t\tif (needs_flush) {\n\t\t\tflush();\n\t\t}\n\t}\n\tif (is_promise(promise)) {\n\t\tconst current_component = get_current_component();\n\t\tpromise.then(\n\t\t\t(value) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.then, 1, info.value, value);\n\t\t\t\tset_current_component(null);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t\t\tset_current_component(null);\n\t\t\t\tif (!info.hasCatch) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\t\tinfo.resolved = /** @type {T} */ (promise);\n\t}\n}\n\n/** @returns {void} */\nexport function update_await_block_branch(info, ctx, dirty) {\n\tconst child_ctx = ctx.slice();\n\tconst { resolved } = info;\n\tif (info.current === info.then) {\n\t\tchild_ctx[info.value] = resolved;\n\t}\n\tif (info.current === info.catch) {\n\t\tchild_ctx[info.error] = resolved;\n\t}\n\tinfo.block.p(child_ctx, dirty);\n}\n","import App from './App.svelte'\n\nconst app = new App({\n    target: document.body,\n})\n\nexport default app\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","crossorigin","current_component","is_crossorigin","window","parent","error","add_iframe_resize_listener","getComputedStyle","position","iframe","tabIndex","unsubscribe","source","contentWindow","onload","toggle_class","toggle","classList","set_current_component","component","get_current_component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","push","add_flush_callback","seen_callbacks","Set","flushidx","saved_component","update","$$","e","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","ensure_array_like","array_like_or_iterator","Array","from","bind","index","props","bound","create_component","mount_component","m","new_on_destroy","on_mount","map","filter","on_destroy","destroy_component","detaching","filtered","targets","indexOf","flush_render_callbacks","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","childNodes","children","l","intro","SvelteComponent","$$set","$destroy","this","$on","type","splice","$set","obj","keys","__svelte","v","defineProperty","build","compareStrings_1","compareStrings","sA","sB","compareNumbers_1","compareNumbers","reverse","compareStringsCaseInsensitive","localeCompare","sensitivity","sortFunction_1","sortFunction","gen","comp","item","table","table_class_value","CLASSNAME_TABLE","svelte_virtual_table_viewport","thead_1","tbody","tfoot","each_blocks","current","iterations","CLASSNAME_SORTABLE","CLASSNAME_ASC","CLASSNAME_DESC","getComputedPxAmount","elem","pseudoElem","property","compStyle","parseInt","averageHeight","contents","mounted","rows","thead","viewport","visible","items","$$props","requireBorderCollapse","class","className","height","itemHeight","start","end","bottom","headHeight","footHeight","heightMap","top","viewportHeight","async","refreshHeightMap","scrollTop","contentHeight","row","getBoundingClientRect","$$invalidate","remaining","scrollToIndex","behavior","opts","left","scrollTo","sortOrder","updateSortOrder","th","fieldName","dataset","sort","getElementsByTagName","resetClasses","onclick","shiftKey","sortInitial","sortedItems","arr","sorted","isStartOverflow","rowBottomBorder","rowTopBorder","headBorderTop","headBorderBottom","actualBorderCollapsedWidth","new_start","y","row_heights","row_height","remaining_height","isFinite","$$value","offsetHeight","textContent","message","p0","p1","p2","p3","tr","t0_value","title","t2_value","user","t4_value","domain","t6_value","time_ago","t8_value","comments_count","a_href_value","url","td0","td1","td2","td3","td4","t0","t2","t4","t6","t8","promise","info","token","resolved","child_ctx","needs_flush","blocks","mount","catch","hasCatch","pending","h1","dataPromise","dataItems","page","res","fetch","json","concat","getData","start2","end2","searchTerm","filteredList","toUpperCase","body"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,12]}